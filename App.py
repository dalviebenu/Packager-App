import tkinter as tk
from PIL import Image, ImageTk
from packager import pack
from utils import *
from pathlib import Path
from tkinter import font
from tkmacosx import Button

default_text = ["Awesome Product Name", "1.0.0", "Description", "C:/Users/sndbx/Epic Input/Epic Product",
                "C:/Users/sndbx/Epic Output/Epic Product", "d0ac1144-7f30-4696-bd90-5c5b1bc676c1", "RP Description",
                "BP Description"]


def center(toplevel):
    toplevel.update_idletasks()

    screen_width = toplevel.winfo_screenwidth()
    screen_height = toplevel.winfo_screenheight()

    size = tuple(int(_) for _ in toplevel.geometry().split('+')[0].split('x'))
    x = screen_width / 2 - size[0] / 2
    y = screen_height / 2 - size[1] / 2

    toplevel.geometry("+%d+%d" % (x, y))


class DefaultEntry(tk.Entry):
    """
    This class is the entry widget used in the app. It inherits from tk.Entry but contains two functions which provide
    disappearing default text.
    """

    def __init__(self, master=None, label="", **kwargs):
        tk.Entry.__init__(self, master, **kwargs)
        self.label = label
        self.default_text_write()
        self.bind("<FocusIn>", self.default_text_erase)
        self.bind("<FocusOut>", self.default_text_write)

    def default_text_erase(self, event=None):
        if self.get() in default_text:
            self.delete(0, tk.END)
            self.configure(fg='white')

    def default_text_write(self, event=None):
        val = self.get()

        if val == "":
            self.insert(0, self.label)
            self.configure(fg='grey')


class DefaultText(tk.Text):
    def __init__(self, master=None, label="", **kwargs):
        tk.Text.__init__(self, master, **kwargs)
        self.label = label
        self.bind("<FocusIn>", self.default_text_erase)
        self.bind("<FocusOut>", self.default_text_write)

    def default_text_erase(self, event=None):
        val = self.get(1.0, tk.END)
        val = ''.join(val.split('\n'))

        if val in default_text:
            self.delete(1.0, tk.END)
            self.configure(fg='white')

    def default_text_write(self, event=None):
        val = self.get(1.0, tk.END)
        val = ''.join(val.split('\n'))

        if val == "":
            self.insert(1.0, self.label)
            self.configure(fg='grey')


def write_json_not_sorted(path, data):
    with open(path, 'w', encoding='UTF-8') as f:
        json.dump(data, f, sort_keys=False, indent=2)
    # This method is the same as in utils but with sort_keys as False. This is repeated to avoid changing code
    # in the packager by adding a (sort_keys) parameter to the method


def make_list(item):
    item = item.split('.')
    for i in range(0, len(item)):
        item[i] = int(item[i])

    return item


def gen_pack_info(des, base_game_ver, lock_option, src):
    """
    Creates packager_data.json that the packager uses placed into the source folder. This is because the packager uses
    the packager_data.json file to generate the manifest.json when the packager is run from cmd. This approach is
    continued with the GUI but instead it is autogenerated.
    """

    result = {
        "texts": {
            "pack.description": ""
        },
        "manifest": {
            "lock_template_options": True,
            "base_game_version": [1, 0, 0]
        }
    }

    result['texts']['pack.description'] = des
    result['manifest']['lock_template_options'] = lock_option
    result['manifest']["base_game_version"] = base_game_ver

    path = Path(src)
    world = Path(path / "world")
    w = []
    if world.is_dir():
        w = list(filter(is_world, world.iterdir()))
        # returns a list of worlds in the worlds directory which contain levelname.txt

        if len(w) == 1:
            w = w[0]
        else:
            print("Multiple world folders...")
            exit()

    write_json_not_sorted(w / "packager_data.json", result)


def compare(item_1, reference):
    if item_1 == reference:
        return None
    elif item_1 != reference:
        return item_1


def package():
    """
    This function is called when the button is pressed. Takes info from boxes and does some formatting. Generates a
    packager.json and calls the pack function.
    """
    src = path_in.get()
    src = ''.join(src.split('\n'))

    dst = path_out.get()
    dst = ''.join(dst.split('\n'))

    name = prod_name.get()

    vers = make_list(version.get()) 

    descr = desc.get(1.0, tk.END)
    descr = ''.join(descr.split('\n'))

    descr_rp = desc_rp.get(1.0, tk.END)
    descr_rp = ''.join(descr_rp.split('\n'))

    descr_bp = desc_bp.get(1.0, tk.END)
    descr_bp = ''.join(descr_bp.split('\n'))

    bgv = make_list(base_game_version.get())

    mev = make_list(min_eng_version.get())

    #    uuid_check_val = check_uuid.get()
    #    if uuid_check_val == 1:
    #        uuid_w = uuid_world.get()
    #        uuid_s = uuid_skin.get()
    #    else:
    #        uuid_w = None
    #        uuid_s = None

    uuid_w = compare(uuid_world.get(), default_text[5])
    uuid_s = compare(uuid_skin.get(), default_text[5])

    temp_opt = check_var.get()
    if temp_opt == 0:
        temp_opt = False
    elif temp_opt == 1:
        temp_opt = True

    descriptions["BP"] = descr_bp
    descriptions["RP"] = descr_rp

    gen_pack_info(descr, bgv, temp_opt, src)
    pack(src, dst, name, uuid_w, uuid_s, vers, mev)


if __name__ == "__main__":
    # hex codes for colours
    background = '#242225'
    entry_background = '#1d1d1d'
    font_color = '#ffffff'
    btn_color = '#58c8b3'
    default_font_color = '#666666'

    # create window
    window = tk.Tk()
    window.title('Packager')
    window.configure(background=background)
    window.resizable(False, False)
    center(window)

    # fonts, need to download and install  Quicksand first
    sub_title_font = font.Font(family='Quicksand', size=16)
    entry_font = font.Font(family="Quicksand", size=14)
    btn_font = font.Font(family="Quicksand", size=14, weight='bold')
    label_font = font.Font(family="Quicksand", size=10)

    # insert logo
    img = ImageTk.PhotoImage(Image.open('SNDBX_logo.png'))
    image_frame = tk.Frame(bg=background)
    panel = tk.Label(master=image_frame, background=background, image=img)

    sub_title = tk.Label(master=image_frame, bg=background, fg=font_color, text="MCO Packager v2.0.1 (beta)",
                         font=sub_title_font)

    image_frame.grid(row=0, column=0, pady=(10, 10))
    panel.grid(row=0, column=0)
    sub_title.grid(row=1, column=0, pady=(5, 2))

    # insert product name, version, lock temp options entry forms
    upper_frame = tk.Frame(master=window, width=101, borderwidth=0, highlightthickness=0, bg=background)
    upper_frame.grid(row=2, column=0, padx=100, sticky='news', pady=(0, 5))

    prod_name_lbl = tk.Label(master=upper_frame, bg=background, text="Product Name", font=label_font, borderwidth=0,
                             fg="white", highlightthickness=0)
    prod_name_lbl.grid(row=0, column=0, padx=16, columnspan=2, sticky='sw')

    ver_name_lbl = tk.Label(master=upper_frame, bg=background, text="Version", font=label_font, borderwidth=0,
                            fg="white", highlightthickness=0)
    ver_name_lbl.grid(row=0, column=0, columnspan=2, padx=(496, 0), sticky='s')

    blue_frame_name = tk.Frame(master=upper_frame, bg=btn_color, width=4, height=20, highlightthickness=0,
                               borderwidth=0)
    blue_frame_name.grid(row=1, column=0, sticky='nw', padx=(19, 0))

    frame_name = tk.Frame(master=upper_frame, bg=entry_background, width=6, height=20, highlightthickness=0,
                          borderwidth=0)
    frame_name.grid(row=1, column=0, sticky='nw', padx=(24, 0))

    prod_name = DefaultEntry(master=upper_frame, label="Awesome Product Name", highlightthickness=0, borderwidth=0,
                             highlightbackground=background, bg=entry_background, fg=default_font_color,
                             font=entry_font)
    prod_name.configure(width=50)
    prod_name.grid(row=1, column=0, padx=(30, 0), sticky='nw')

    blue_frame_name = tk.Frame(master=upper_frame, bg=btn_color, width=4, height=20, highlightthickness=0,
                               borderwidth=0)
    blue_frame_name.grid(row=1, column=1, sticky='nw', padx=(59, 0))

    frame_name = tk.Frame(master=upper_frame, bg=entry_background, width=8, height=20, highlightthickness=0,
                          borderwidth=0)
    frame_name.grid(row=1, column=1, sticky='nw', padx=(63, 0))

    version = DefaultEntry(master=upper_frame, label="1.0.0", font=entry_font,
                           highlightbackground=background, bg=entry_background, fg=font_color, highlightthickness=0,
                           borderwidth=0)
    version.configure(width=16)
    version.grid(row=1, column=1, columnspan=2, padx=(69, 0), sticky='w')

    # insert description entry form
    desc_label = tk.Label(master=window, background=background, borderwidth=0, highlightthickness=0, fg="white",
                          font=label_font, text="Product Description")
    desc_label.grid(row=4, column=0, padx=116, pady=(10, 0), sticky="sw")

    desc_frame = tk.Frame(master=window, borderwidth=1, bg=background)
    desc_frame.grid(row=5, column=0, padx=118)

    blue_frame_desc = tk.Frame(master=desc_frame, bg=btn_color, width=4, height=57, highlightthickness=0,
                               borderwidth=0)
    blue_frame_desc.grid(row=0, column=0, sticky='nw')

    frame_desc = tk.Frame(master=desc_frame, bg=entry_background, width=6, height=57, highlightthickness=0,
                          borderwidth=0)
    frame_desc.grid(row=0, column=0, sticky='nw', padx=(4, 0))

    desc = DefaultText(master=desc_frame, bg=entry_background, fg='grey', label="Description", highlightthickness=0,
                       borderwidth=0)
    desc.insert(1.0, "Description")
    desc.configure(height=3, width=74)
    desc.configure(highlightbackground=background)
    desc.configure(font=entry_font)
    desc.grid(row=0, column=0, padx=10, pady=(0, 8), sticky='nw')

    # insert RP description entry form
    desc_rp_label = tk.Label(master=window, background=background, borderwidth=0, highlightthickness=0, fg="white",
                             font=label_font, text="Product RP Description")
    desc_rp_label.grid(row=6, column=0, padx=116, pady=(10, 0), sticky="sw")

    desc_rp_frame = tk.Frame(master=window, borderwidth=1, bg=background)
    desc_rp_frame.grid(row=7, column=0, padx=118)

    blue_frame_desc_rp = tk.Frame(master=desc_rp_frame, bg=btn_color, width=4, height=57, highlightthickness=0,
                                  borderwidth=0)
    blue_frame_desc_rp.grid(row=0, column=0, sticky='nw')

    frame_desc_rp = tk.Frame(master=desc_rp_frame, bg=entry_background, width=6, height=57, highlightthickness=0,
                             borderwidth=0)
    frame_desc_rp.grid(row=0, column=0, sticky='nw', padx=(4, 0))

    desc_rp = DefaultText(master=desc_rp_frame, bg=entry_background, fg='grey', label="RP Description",
                          highlightthickness=0, borderwidth=0)
    desc_rp.insert(1.0, "RP Description")
    desc_rp.configure(height=3, width=74)
    desc_rp.configure(highlightbackground=background)
    desc_rp.configure(font=entry_font)
    desc_rp.grid(row=0, column=0, padx=10, pady=(0, 8), sticky='nw')

    # insert BP description entry form
    desc_bp_label = tk.Label(master=window, background=background, borderwidth=0, highlightthickness=0, fg="white",
                             font=label_font, text="Product BP Description")
    desc_bp_label.grid(row=8, column=0, padx=116, pady=(10, 0), sticky="sw")

    desc_bp_frame = tk.Frame(master=window, borderwidth=1, bg=background)
    desc_bp_frame.grid(row=9, column=0, padx=118)

    blue_frame_desc_bp = tk.Frame(master=desc_bp_frame, bg=btn_color, width=4, height=57, highlightthickness=0,
                                  borderwidth=0)
    blue_frame_desc_bp.grid(row=0, column=0, sticky='nw')

    frame_desc_bp = tk.Frame(master=desc_bp_frame, bg=entry_background, width=6, height=57, highlightthickness=0,
                             borderwidth=0)
    frame_desc_bp.grid(row=0, column=0, sticky='nw', padx=(4, 0))

    desc_bp = DefaultText(master=desc_bp_frame, bg=entry_background, fg='grey', label="BP Description",
                          highlightthickness=0, borderwidth=0)
    desc_bp.insert(1.0, "BP Description")
    desc_bp.configure(height=3, width=74)
    desc_bp.configure(highlightbackground=background)
    desc_bp.configure(font=entry_font)
    desc_bp.grid(row=0, column=0, padx=10, pady=(0, 8), sticky='nw')

    # insert Base game version and min engine version
    # versions labels
    frame_null2 = tk.Frame(master=window, bg=background, height=20)
    frame_null2.grid(row=11, column=0, padx=20)

    version_frame = tk.Frame(master=window, bg=background)
    version_frame.grid(row=12, column=0, sticky="sw", padx=116)

    bgv_label = tk.Label(master=version_frame, text="Base Game Version", font=label_font, fg="white", borderwidth=0,
                         bg=background, highlightthickness=0, )
    bgv_label.pack(side=tk.LEFT)

    mev_label = tk.Label(master=version_frame, text="Min. Engine Version", font=label_font, fg="white", borderwidth=0,
                         bg=background, highlightthickness=0, )
    mev_label.pack(side=tk.LEFT, padx=56)

    lock_label = tk.Label(master=version_frame, text="Lock Template Options", font=label_font, fg="white",
                          borderwidth=0,
                          bg=background, highlightthickness=0, )
    lock_label.pack(side=tk.LEFT)

    # version entry boxes
    game_version_frame = tk.Frame(master=window, bg=background)
    game_version_frame.grid(row=11, column=0, padx=119, sticky='news')

    blue_frame_bgv = tk.Frame(master=game_version_frame, bg=btn_color, width=4, height=20, highlightthickness=0,
                              borderwidth=0)
    blue_frame_bgv.grid(row=0, column=0, sticky='nw')

    frame_bgv = tk.Frame(master=game_version_frame, bg=entry_background, width=6, height=20, highlightthickness=0,
                         borderwidth=0)
    frame_bgv.grid(row=0, column=0, sticky='nw', padx=(4, 0))

    base_game_version = DefaultEntry(master=game_version_frame, width=15, bg=entry_background, label="1.0.0",
                                     fg=font_color, font=entry_font, highlightbackground=background,
                                     highlightthickness=0,
                                     borderwidth=0)
    base_game_version.grid(row=0, column=0, padx=10, sticky='nw')

    blue_frame_bgv = tk.Frame(master=game_version_frame, bg=btn_color, width=4, height=20, highlightthickness=0,
                              borderwidth=0)
    blue_frame_bgv.grid(row=0, column=0, sticky='nw', padx=157)

    frame_bgv = tk.Frame(master=game_version_frame, bg=entry_background, width=6, height=20, highlightthickness=0,
                         borderwidth=0)
    frame_bgv.grid(row=0, column=0, sticky='nw', padx=(161, 0))

    min_eng_version = DefaultEntry(master=game_version_frame, width=15, bg=entry_background, label="1.0.0",
                                   fg=font_color, highlightbackground=background, font=entry_font, highlightthickness=0,
                                   borderwidth=0, )
    min_eng_version.grid(row=0, column=0, padx=167, sticky='nw')

    check_var = tk.IntVar()
    lock_temp = tk.Checkbutton(master=game_version_frame, font=entry_font, fg=font_color,
                               highlightbackground=background, background=background, variable=check_var)
    lock_temp.select()
    lock_temp.grid(row=0, column=0, padx=310, sticky='nw')

    # insert Path in/out
    widget_width = 68

    frame_null3 = tk.Frame(master=window, bg=background, height=20)
    frame_null3.grid(row=12, column=0, padx=20)

    path_in_label = tk.Label(master=window, bg=background, text="Input Path", fg="white", highlightthickness=0,
                             borderwidth=0, font=label_font)
    path_in_label.grid(row=13, column=0, sticky="sw", padx=117)

    path_frame = tk.Frame(master=window, background=background)
    path_frame.grid(row=14, column=0, sticky='nw', padx=119, columnspan=2)

    blue_frame_path1 = tk.Frame(master=path_frame, bg=btn_color, width=4, height=20, highlightthickness=0,
                                borderwidth=0)
    blue_frame_path1.grid(row=0, column=0, sticky='nw')

    frame_path1 = tk.Frame(master=path_frame, bg=entry_background, width=6, height=20, highlightthickness=0,
                           borderwidth=0)
    frame_path1.grid(row=0, column=0, sticky='nw', padx=(4, 0))

    path_in = DefaultEntry(master=path_frame, width=widget_width, bg=entry_background, fg=font_color, font=entry_font,
                           label="C:/Users/sndbx/Epic Input/Epic Product", highlightbackground=background,
                           highlightthickness=0, borderwidth=0, )
    path_in.configure(width=74)
    path_in.grid(row=0, column=0, padx=10, pady=(0, 5))

    path_out_label = tk.Label(master=path_frame, bg=background, text="Output Path", fg="white", highlightthickness=0,
                              borderwidth=0, font=label_font)
    path_out_label.grid(row=1, column=0, sticky='sw', pady=(5, 0))

    blue_frame_path2 = tk.Frame(master=path_frame, bg=btn_color, width=4, height=20, highlightthickness=0,
                                borderwidth=0)
    blue_frame_path2.grid(row=2, column=0, sticky='nw')

    frame_path2 = tk.Frame(master=path_frame, bg=entry_background, width=6, height=20, highlightthickness=0,
                           borderwidth=0)
    frame_path2.grid(row=2, column=0, sticky='nw', padx=(4, 0))

    path_out = DefaultEntry(master=path_frame, width=widget_width, bg=entry_background, fg=font_color,
                            label="C:/Users/sndbx/Epic Output/Epic Product", font=entry_font,
                            highlightbackground=background,
                            highlightthickness=0, borderwidth=0)

    path_out.configure(width=74)
    path_out.grid(row=2, column=0, pady=(0, 10), padx=10)

    # insert uuid check box
    # uuid_check_box = tk.Frame(master=window, background=background)
    # uuid_check_box.grid(row=13, column=0, sticky='nw', padx=70, columnspan=2)

    # uuid_check_label = tk.Label(master=uuid_check_box, bg=background, text="Override UUID", fg="white",
    #                            highlightthickness=0, borderwidth=0, font=label_font)
    # uuid_check_label.grid(row=0, column=0, sticky='sw', pady=(5, 0))

    # check_uuid = tk.IntVar()
    # uuid_check = tk.Checkbutton(master=uuid_check_box, highlightbackground=background,
    #                            font=entry_font, fg=font_color, background=background, variable=check_uuid,
    #                           highlightthickness=0, borderwidth=0)
    # uuid_check.grid(row=1, column=0, sticky='nw')

    # insert uuids
    uuid_frame = tk.Frame(master=window, background=background)
    uuid_frame.grid(row=15, column=0, sticky='nw', padx=119, pady=10, columnspan=2)

    uuid_world_label = tk.Label(master=uuid_frame, bg=background, text="UUID Override: World Template", fg="white",
                                highlightthickness=0, borderwidth=0, font=label_font)
    uuid_world_label.grid(row=0, column=0, sticky='sw', pady=(5, 0))

    blue_frame_uuid1 = tk.Frame(master=uuid_frame, bg=btn_color, width=4, height=20, highlightthickness=0,
                                borderwidth=0)
    blue_frame_uuid1.grid(row=1, column=0, sticky='nw')

    frame_uuidw = tk.Frame(master=uuid_frame, bg=entry_background, width=6, height=20, highlightthickness=0,
                           borderwidth=0)
    frame_uuidw.grid(row=1, column=0, sticky='nw', padx=(4, 0))

    uuid_world = DefaultEntry(master=uuid_frame, width=widget_width, bg=entry_background, fg=font_color,
                              font=entry_font, label="d0ac1144-7f30-4696-bd90-5c5b1bc676c1",
                              highlightbackground=background,
                              highlightthickness=0, borderwidth=0)
    uuid_world.configure(width=74)
    uuid_world.grid(row=1, column=0, sticky='nw', padx=10, pady=(0, 5))

    uuid_world_label = tk.Label(master=uuid_frame, bg=background, text="UUID Override: Skin Pack", fg="white",
                                highlightthickness=0, borderwidth=0, font=label_font)
    uuid_world_label.grid(row=2, column=0, sticky='sw', pady=(8, 0))

    blue_frame_uuid2 = tk.Frame(master=uuid_frame, bg=btn_color, width=4, height=20, highlightthickness=0,
                                borderwidth=0)
    blue_frame_uuid2.grid(row=3, column=0, sticky='nw')

    frame_uuids = tk.Frame(master=uuid_frame, bg=entry_background, width=6, height=20, highlightthickness=0,
                           borderwidth=0)
    frame_uuids.grid(row=3, column=0, sticky='nw', padx=(4, 0))

    uuid_skin = DefaultEntry(master=uuid_frame, width=widget_width, bg=entry_background, fg=font_color,
                             font=entry_font, label="d0ac1144-7f30-4696-bd90-5c5b1bc676c1", highlightbackground='white',
                             highlightthickness=0, borderwidth=0)
    uuid_skin.configure(width=74)
    uuid_skin.grid(row=3, column=0, padx=10, sticky='nw')

    # Insert package button

    btn_frame = tk.Frame(master=window, background=background, highlightthickness=0, borderwidth=0)
    btn_frame.grid(row=16, column=0, columnspan=2, sticky='n', pady=(10, 50))

    frame1 = tk.Frame(master=btn_frame, bg='#68EBD2', height=5, width=110, highlightbackground=background,
                      highlightthickness=0, borderwidth=0)
    frame1.grid(row=0, column=0)

    btn = Button(master=btn_frame, text="Package", bg=btn_color, fg='white', height=30, width=110,
                 borderwidth=0, activebackground='#4FB19F', highlightbackground=background, highlightthickness=0,
                 bd=0, font=btn_font, command=package)
    btn.grid(row=1, column=0, ipadx=0, ipady=0)

    frame1 = tk.Frame(master=btn_frame, bg='#47A190', height=5, width=110, highlightbackground=background,
                      highlightthickness=0, borderwidth=0)
    frame1.grid(row=2, column=0)

    window.mainloop()
